###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                14/Jan/2014  11:35:03 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Com #
#                          ponents\hal\common\hal_drivers.c                   #
#    Command line       =  -f E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14 #
#                          ÎïÁªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁ #
#                          ªÍø¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\ #
#                          Projects\zstack\Utilities\SerialApp\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wEndev.cfg (-DCPU32MHZ        #
#                          -DROOT=__near_func -DBLINK_LEDS) -f                #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \Tools\CC2530DB\f8wConfig.cfg (-DSECURE=0          #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Com #
#                          ponents\hal\common\hal_drivers.c -D ZIGBEEPRO -D   #
#                          NWK_AUTO_POLL -D HAL_UART=TRUE -D                  #
#                          SERIAL_APP_PORT=0 -D LCD_SUPPORTED -D ZAPP_P1 -D   #
#                          xPOWER_SAVING -D SOFT_START=TRUE -lC               #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\EndDevic #
#                          eEB-Pro\List\ -lA E:\ShengLi\01-Farsight\10-ÎïÁªÍø #
#                          Ê¦×Ê°à\FS_11C14ÎïÁªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ #
#                          \31_»ùÓÚQTµÄÎïÁªÍø¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC25 #
#                          30-2.3.0-1.4.0\Projects\zstack\Utilities\SerialApp #
#                          \CC2530DB\EndDeviceEB-Pro\List\ --diag_suppress    #
#                          Pe001,Pa010 -o E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦× #
#                          Ê°à\FS_11C14ÎïÁªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31 #
#                          _»ùÓÚQTµÄÎïÁªÍø¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530- #
#                          2.3.0-1.4.0\Projects\zstack\Utilities\SerialApp\CC #
#                          2530DB\EndDeviceEB-Pro\Obj\ -e                     #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I E:\ShengLi\01-Farsight\10- #
#                          ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´ #
#                          Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStac #
#                          k-CC2530-2.3.0-1.4.0\Projects\zstack\Utilities\Ser #
#                          ialApp\CC2530DB\ -I E:\ShengLi\01-Farsight\10-ÎïÁª #
#                          ÍøÊ¦×Ê°à\FS_11C14ÎïÁªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²â #
#                          ÊÔ\31_»ùÓÚQTµÄÎïÁªÍø¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC #
#                          2530-2.3.0-1.4.0\Projects\zstack\Utilities\SerialA #
#                          pp\CC2530DB\..\SOURCE\ -I                          #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \ZMAIN\TI2530DB\ -I E:\ShengLi\01-Farsight\10-ÎïÁª #
#                          ÍøÊ¦×Ê°à\FS_11C14ÎïÁªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²â #
#                          ÊÔ\31_»ùÓÚQTµÄÎïÁªÍø¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC #
#                          2530-2.3.0-1.4.0\Projects\zstack\Utilities\SerialA #
#                          pp\CC2530DB\..\..\..\..\..\COMPONENTS\MT\ -I       #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\HAL\INCLUDE\ -I                  #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\HAL\TARGET\CC2530EB\ -I          #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\OSAL\MCU\CCSOC\ -I               #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\OSAL\INCLUDE\ -I                 #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\STACK\AF\ -I                     #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\STACK\NWK\ -I                    #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\STACK\SEC\ -I                    #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\STACK\SAPI\ -I                   #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\STACK\SYS\ -I                    #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\STACK\ZDO\ -I                    #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\ZMAC\F8W\ -I                     #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\ZMAC\ -I                         #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\SERVICES\SADDR\ -I               #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\SERVICES\SDATA\ -I               #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\MAC\INCLUDE\ -I                  #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\MAC\HIGH_LEVEL\ -I               #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\ -I          #
#                          E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\..\..\.. #
#                          \..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\ #
#                           -I E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C1 #
#                          4ÎïÁªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎï #
#                          ÁªÍø¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0 #
#                          \Projects\zstack\Utilities\SerialApp\CC2530DB\..\u #
#                          sr_code\include\ -I "D:\Program Files\IAR          #
#                          Systems\Embedded Workbench 5.3\8051\INC\" -I       #
#                          "D:\Program Files\IAR Systems\Embedded Workbench   #
#                          5.3\8051\INC\CLIB\" -Ohz                           #
#    List file          =  E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\EndDevic #
#                          eEB-Pro\List\hal_drivers.lst                       #
#    Object file        =  E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁ #
#                          ªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø #
#                          ¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Utilities\SerialApp\CC2530DB\EndDevic #
#                          eEB-Pro\Obj\hal_drivers.r51                        #
#                                                                             #
#                                                                             #
###############################################################################

E:\ShengLi\01-Farsight\10-ÎïÁªÍøÊ¦×Ê°à\FS_11C14ÎïÁªÍø¿ª·¢Æ½Ì¨ÅäÌ××ÊÁÏV6.0\Ô´Âë²âÊÔ\31_»ùÓÚQTµÄÎïÁªÍø¹ÜÀíÏµÍ³_WindowsÏµÍ³\ZStack-CC2530-2.3.0-1.4.0\Components\hal\common\hal_drivers.c
      1          /**************************************************************************************************
      2            Filename:       hal_drivers.c
      3            Revised:        $Date: 2007-07-06 10:42:24 -0700 (Fri, 06 Jul 2007) $
      4            Revision:       $Revision: 13579 $
      5          
      6            Description:    This file contains the interface to the Drivers Service.
      7          
      8          
      9            Copyright 2005-2009 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED AS IS?WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          
     41          /**************************************************************************************************
     42           *                                            INCLUDES
     43           **************************************************************************************************/
     44          #include "hal_types.h"
     45          #include "OSAL.h"
     46          #include "hal_drivers.h"
     47          #include "hal_adc.h"
     48          #if (defined HAL_DMA) && (HAL_DMA == TRUE)
     49            #include "hal_dma.h"
     50          #endif
     51          #include "hal_flash.h"
     52          #include "hal_key.h"
     53          #include "hal_lcd.h"
     54          #include "hal_led.h"
     55          #include "hal_timer.h"
     56          #include "hal_uart.h"
     57          #include "hal_sleep.h"
     58          #if (defined HAL_AES) && (HAL_AES == TRUE)
     59            #include "hal_aes.h"
     60          #endif
     61          
     62          #if (defined HAL_SPI) && (HAL_SPI == TRUE)
     63            #include "hal_spi.h"
     64          #endif
     65          #if (defined HAL_HID) && (HAL_HID == TRUE)
     66            #include "usb_hid.h"
     67          #endif
     68          
     69          
     70          /**************************************************************************************************
     71           *                                            MACROS
     72           **************************************************************************************************/
     73          
     74          
     75          
     76          /**************************************************************************************************
     77           *                                          CONSTANTS
     78           **************************************************************************************************/
     79          
     80          
     81          /**************************************************************************************************
     82           *                                          TYPEDEFS
     83           **************************************************************************************************/
     84          
     85          
     86          /**************************************************************************************************
     87           *                                      GLOBAL VARIABLES
     88           **************************************************************************************************/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     89          uint8 Hal_TaskID;
   \                     Hal_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     90          
     91          extern void HalLedUpdate( void ); /* Notes: This for internal only so it shouldn't be in hal_led.h */
     92          extern UINT16 Timer_ledProcess(uint8 task_id, UINT16 events);
     93          extern uint8 Led_TaskID;
     94          
     95          /**************************************************************************************************
     96           *                                      FUNCTIONS - API
     97           **************************************************************************************************/
     98          
     99          /**************************************************************************************************
    100           * @fn      Hal_Init
    101           *
    102           * @brief   Hal Initialization function.
    103           *
    104           * @param   task_id - Hal TaskId
    105           *
    106           * @return  None
    107           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    108          void Hal_Init( uint8 task_id )
   \                     Hal_Init:
    109          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    110            /* Register task ID */
    111            Hal_TaskID = task_id;
   \   000004   E9           MOV     A,R1
   \   000005   90....       MOV     DPTR,#Hal_TaskID
   \   000008   F0           MOVX    @DPTR,A
    112          }
   \   000009                REQUIRE ?Subroutine0
   \   000009                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    113          
    114          /**************************************************************************************************
    115           * @fn      Hal_DriverInit
    116           *
    117           * @brief   Initialize HW - These need to be initialized before anyone.
    118           *
    119           * @param   task_id - Hal TaskId
    120           *
    121           * @return  None
    122           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    123          void HalDriverInit (void)
   \                     HalDriverInit:
    124          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    125            /* TIMER */
    126          #if (defined HAL_TIMER) && (HAL_TIMER == TRUE)
    127            HalTimerInit();
   \   000004                ; Setup parameters for call to function HalTimerInit
   \   000004   12....       LCALL   ??HalTimerInit?relay
    128           
    129          #endif
    130          
    131            /* ADC */
    132          #if (defined HAL_ADC) && (HAL_ADC == TRUE)
    133            HalAdcInit();
   \   000007                ; Setup parameters for call to function HalAdcInit
   \   000007   12....       LCALL   ??HalAdcInit?relay
    134          #endif
    135          
    136            /* DMA */
    137          #if (defined HAL_DMA) && (HAL_DMA == TRUE)
    138            // Must be called before the init call to any module that uses DMA.
    139            HalDmaInit();
   \   00000A                ; Setup parameters for call to function HalDmaInit
   \   00000A   12....       LCALL   ??HalDmaInit?relay
    140          #endif
    141          
    142            /* Flash */
    143          #if (defined HAL_FLASH) && (HAL_FLASH == TRUE)
    144            // Must be called before the init call to any module that uses Flash access or NV.
    145            HalFlashInit();
   \   00000D                ; Setup parameters for call to function HalFlashInit
   \   00000D   12....       LCALL   ??HalFlashInit?relay
    146          #endif
    147          
    148            /* AES */
    149          #if (defined HAL_AES) && (HAL_AES == TRUE)
    150            HalAesInit();
   \   000010                ; Setup parameters for call to function HalAesInit
   \   000010   12....       LCALL   ??HalAesInit?relay
    151          #endif
    152          
    153            /* LCD */
    154          #if (defined HAL_LCD) && (HAL_LCD == TRUE)
    155            HalLcdInit();
   \   000013                ; Setup parameters for call to function HalLcdInit
   \   000013   12....       LCALL   ??HalLcdInit?relay
    156          #endif
    157          
    158            /* LED */
    159          #if (defined HAL_LED) && (HAL_LED == TRUE)
    160            HalLedInit();
   \   000016                ; Setup parameters for call to function HalLedInit
   \   000016   12....       LCALL   ??HalLedInit?relay
    161          #endif
    162          
    163            /* UART */
    164          #if (defined HAL_UART) && (HAL_UART == TRUE)
    165            HalUARTInit();
   \   000019                ; Setup parameters for call to function HalUARTInit
   \   000019   12....       LCALL   ??HalUARTInit?relay
    166          #endif
    167          
    168            /* KEY */
    169          #if (defined HAL_KEY) && (HAL_KEY == TRUE)
    170            HalKeyInit();
   \   00001C                ; Setup parameters for call to function HalKeyInit
   \   00001C   12....       LCALL   ??HalKeyInit?relay
    171          #endif
    172          
    173            /* SPI */
    174          #if (defined HAL_SPI) && (HAL_SPI == TRUE)
    175            HalSpiInit();
    176          #endif
    177          
    178            /* HID */
    179          #if (defined HAL_HID) && (HAL_HID == TRUE)
    180            usbHidInit();
    181          #endif
    182          }
   \   00001F   80..         SJMP    ?Subroutine0
    183          
    184          
    185          /**************************************************************************************************
    186           * @fn      Hal_ProcessEvent
    187           *
    188           * @brief   Hal Process Event
    189           *
    190           * @param   task_id - Hal TaskId
    191           *          events - events
    192           *
    193           * @return  None
    194           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    195          uint16 Hal_ProcessEvent( uint8 task_id, uint16 events )
   \                     Hal_ProcessEvent:
    196          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    197            uint8 *msgPtr;
    198            
    199            (void)task_id;  // Intentionally unreferenced parameter
    200          
    201            if ( events & SYS_EVENT_MSG )
   \   000009   7480         MOV     A,#-0x80
   \   00000B   5F           ANL     A,R7
   \   00000C   F9           MOV     R1,A
   \   00000D   E4           CLR     A
   \   00000E   7001         JNZ     ??Hal_ProcessEvent_0
   \   000010   E9           MOV     A,R1
   \                     ??Hal_ProcessEvent_0:
   \   000011   601B         JZ      ??Hal_ProcessEvent_1
    202            {
    203              msgPtr = osal_msg_receive(Hal_TaskID);
   \   000013                ; Setup parameters for call to function osal_msg_receive
   \   000013   8003         SJMP    ??Hal_ProcessEvent_2
    204          
    205              while (msgPtr)
    206              {
    207                /* Do something here - for now, just deallocate the msg and move on */
    208          
    209                /* De-allocate */
    210                osal_msg_deallocate( msgPtr );
   \                     ??Hal_ProcessEvent_3:
   \   000015                ; Setup parameters for call to function osal_msg_deallocate
   \   000015   12....       LCALL   ??osal_msg_deallocate?relay
    211                /* Next */
    212                msgPtr = osal_msg_receive( Hal_TaskID );
   \   000018                ; Setup parameters for call to function osal_msg_receive
   \                     ??Hal_ProcessEvent_2:
   \   000018   90....       MOV     DPTR,#Hal_TaskID
   \   00001B   E0           MOVX    A,@DPTR
   \   00001C   F9           MOV     R1,A
   \   00001D   12....       LCALL   ??osal_msg_receive?relay
    213              }
   \   000020   EA           MOV     A,R2
   \   000021   7001         JNZ     ??Hal_ProcessEvent_4
   \   000023   EB           MOV     A,R3
   \                     ??Hal_ProcessEvent_4:
   \   000024   70EF         JNZ     ??Hal_ProcessEvent_3
    214              return events ^ SYS_EVENT_MSG;
   \   000026   EE           MOV     A,R6
   \   000027   FA           MOV     R2,A
   \   000028   7480         MOV     A,#-0x80
   \   00002A   6F           XRL     A,R7
   \                     ??Hal_ProcessEvent_5:
   \   00002B   FB           MOV     R3,A
   \   00002C   8041         SJMP    ??Hal_ProcessEvent_6
    215            }
    216          
    217            if ( events & HAL_LED_BLINK_EVENT )
   \                     ??Hal_ProcessEvent_1:
   \   00002E   EE           MOV     A,R6
   \   00002F   5402         ANL     A,#0x2
   \   000031   6016         JZ      ??Hal_ProcessEvent_7
    218            {
    219              Timer_ledProcess(Led_TaskID, HAL_LED_BLINK_EVENT);
   \   000033                ; Setup parameters for call to function Timer_ledProcess
   \   000033   7A02         MOV     R2,#0x2
   \   000035   7B00         MOV     R3,#0x0
   \   000037   90....       MOV     DPTR,#Led_TaskID
   \   00003A   E0           MOVX    A,@DPTR
   \   00003B   F9           MOV     R1,A
   \   00003C   12....       LCALL   ??Timer_ledProcess?relay
    220          #if (defined (BLINK_LEDS)) && (HAL_LED == TRUE)
    221              HalLedUpdate();
   \   00003F                ; Setup parameters for call to function HalLedUpdate
   \   00003F   12....       LCALL   ??HalLedUpdate?relay
    222          #endif /* BLINK_LEDS && HAL_LED */
    223              return events ^ HAL_LED_BLINK_EVENT;
   \   000042   7402         MOV     A,#0x2
   \                     ??Hal_ProcessEvent_8:
   \   000044   6E           XRL     A,R6
   \   000045   FA           MOV     R2,A
   \   000046   EF           MOV     A,R7
   \   000047   80E2         SJMP    ??Hal_ProcessEvent_5
    224            }
    225          
    226            if (events & HAL_KEY_EVENT)
   \                     ??Hal_ProcessEvent_7:
   \   000049   EE           MOV     A,R6
   \   00004A   A2E0         MOV     C,0xE0 /* A   */.0
   \   00004C   501D         JNC     ??Hal_ProcessEvent_9
    227            {
    228          
    229          #if (defined HAL_KEY) && (HAL_KEY == TRUE)
    230              /* Check for keys */
    231              HalKeyPoll();
   \   00004E                ; Setup parameters for call to function HalKeyPoll
   \   00004E   12....       LCALL   ??HalKeyPoll?relay
    232          
    233              /* if interrupt disabled, do next polling */
    234              if (!Hal_KeyIntEnable)
   \   000051   90....       MOV     DPTR,#Hal_KeyIntEnable
   \   000054   E0           MOVX    A,@DPTR
   \   000055   7010         JNZ     ??Hal_ProcessEvent_10
    235              {
    236                osal_start_timerEx( Hal_TaskID, HAL_KEY_EVENT, 100);
   \   000057                ; Setup parameters for call to function osal_start_timerEx
   \   000057   7C64         MOV     R4,#0x64
   \   000059   7D00         MOV     R5,#0x0
   \   00005B   7A01         MOV     R2,#0x1
   \   00005D   7B00         MOV     R3,#0x0
   \   00005F   90....       MOV     DPTR,#Hal_TaskID
   \   000062   E0           MOVX    A,@DPTR
   \   000063   F9           MOV     R1,A
   \   000064   12....       LCALL   ??osal_start_timerEx?relay
    237              }
    238          #endif // HAL_KEY
    239          
    240              return events ^ HAL_KEY_EVENT;
   \                     ??Hal_ProcessEvent_10:
   \   000067   7401         MOV     A,#0x1
   \   000069   80D9         SJMP    ??Hal_ProcessEvent_8
    241            }
    242          
    243          #ifdef POWER_SAVING
    244            if ( events & HAL_SLEEP_TIMER_EVENT )
    245            {
    246              
    247              halRestoreSleepLevel();
    248              return events ^ HAL_SLEEP_TIMER_EVENT;
    249            }
    250          #endif
    251          
    252            /* Nothing interested, discard the message */
    253            return 0;
   \                     ??Hal_ProcessEvent_9:
   \   00006B   7A00         MOV     R2,#0x0
   \   00006D   7B00         MOV     R3,#0x0
   \                     ??Hal_ProcessEvent_6:
   \   00006F   7F02         MOV     R7,#0x2
   \   000071   02....       LJMP    ?BANKED_LEAVE_XDATA
    254          
    255          }
    256          
    257          /**************************************************************************************************
    258           * @fn      Hal_ProcessPoll
    259           *
    260           * @brief   This routine will be called by OSAL to poll UART, TIMER...
    261           *
    262           * @param   task_id - Hal TaskId
    263           *
    264           * @return  None
    265           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    266          void Hal_ProcessPoll ()
   \                     Hal_ProcessPoll:
    267          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    268          
    269            /* Timer Poll */
    270          #if (defined HAL_TIMER) && (HAL_TIMER == TRUE)
    271            HalTimerTick();
   \   000004                ; Setup parameters for call to function HalTimerTick
   \   000004   12....       LCALL   ??HalTimerTick?relay
    272          #endif
    273          
    274            /* UART Poll */
    275          #if (defined HAL_UART) && (HAL_UART == TRUE)
    276            HalUARTPoll();
   \   000007                ; Setup parameters for call to function HalUARTPoll
   \   000007   12....       LCALL   ??HalUARTPoll?relay
    277          #endif  
    278          
    279            /* SPI Poll */
    280          #if (defined HAL_SPI) && (HAL_SPI == TRUE)
    281            HalSpiPoll();
    282          #endif
    283          
    284            /* HID poll */
    285          #if (defined HAL_HID) && (HAL_HID == TRUE)
    286            usbHidProcessEvents();
    287          #endif
    288          
    289          }
   \   00000A   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalDriverInit?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalDriverInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_ProcessPoll?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_ProcessPoll
    290          
    291          
    292          /**************************************************************************************************
    293          **************************************************************************************************/
    294          

   Maximum stack usage in bytes:

     Function                 ISTACK PSTACK XSTACK
     --------                 ------ ------ ------
     HalDriverInit                2      0      0
       -> HalTimerInit            4      0      0
       -> HalAdcInit              4      0      0
       -> HalDmaInit              4      0      0
       -> HalFlashInit            4      0      0
       -> HalAesInit              4      0      0
       -> HalLcdInit              4      0      0
       -> HalLedInit              4      0      0
       -> HalUARTInit             4      0      0
       -> HalKeyInit              4      0      0
     Hal_Init                     2      0      0
     Hal_ProcessEvent             0      0     10
       -> osal_msg_receive        0      0     20
       -> osal_msg_deallocate     0      0     20
       -> osal_msg_receive        0      0     20
       -> Timer_ledProcess        0      0     20
       -> HalLedUpdate            0      0     20
       -> HalKeyPoll              0      0     20
       -> osal_start_timerEx      0      0     20
     Hal_ProcessPoll              2      0      0
       -> HalTimerTick            4      0      0
       -> HalUARTPoll             4      0      0


   Segment part sizes:

     Function/Label           Bytes
     --------------           -----
     Hal_TaskID                  1
     Hal_Init                    9
     ?Subroutine0                7
     HalDriverInit              33
     Hal_ProcessEvent          116
     Hal_ProcessPoll            13
     ??Hal_Init?relay            6
     ??HalDriverInit?relay       6
     ??Hal_ProcessEvent?relay    6
     ??Hal_ProcessPoll?relay     6

 
 178 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   1 byte  in segment XDATA_Z
 
 202 bytes of CODE  memory
   1 byte  of XDATA memory

Errors: none
Warnings: none
